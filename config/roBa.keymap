#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        // 新しいスクロール動作の追加

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE Q  &kp W         &kp E                    &kp R                        &kp T                                                 &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A         &kp S         &kp D                    &kp F                        &kp G    &kp LS(LG(S))               &kp LS(SEMI)     &kp H        &kp J  &kp K      &kp L    &kp MINUS
&kp Z         &kp X         &kp C                    &kp V                        &lt 6 B  &kp HOME                    &kp SLASH        &kp N        &kp M  &kp COMMA  &kp DOT  &kp LS(MINUS)
&kp LCTRL     &kp LEFT_ALT  &mt LEFT_GUI LEFT_SHIFT  &mt INT_HENKAN INT_MUHENKAN  &mo 4    &lt_to_layer_0 3 SPACE      &lt 2 BACKSPACE  &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION_NUM {
            bindings = <
&kp N7        &kp N8        &kp N9        &trans  &trans                      &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&kp N4        &kp N5        &kp NUMBER_6  &trans  &trans  &trans      &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans  &trans      &trans  &kp F11  &kp F12  &trans  &trans  &trans
&kp N0        &trans        &trans        &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp LS(N2)  &kp HASH       &kp DOLLAR  &kp PERCENT                                        &kp INT_YEN        &kp LS(N6)        &trans                 &trans                &trans
&kp QUESTION     &trans      &kp LS(EQUAL)  &trans      &kp LS(APOSTROPHE)  &trans         &kp LESS_THAN   &kp GREATER_THAN   &kp LEFT_BRACKET  &kp LS(N8)             &kp LEFT_PARENTHESIS  &kp KP_DIVIDE
&trans           &trans      &trans         &trans      &kp LS(SEMI)        &kp MINUS      &kp LS(INT_RO)  &kp RIGHT_BRACKET  &kp NON_US_HASH   &kp LS(RIGHT_BRACKET)  &kp LS(NON_US_HASH)   &kp BACKSLASH
&trans           &trans      &trans         &trans      &trans              &trans         &trans          &trans                                                                            &kp LS(INT_YEN)
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &trans          &kp UP_ARROW    &trans           &kp LC(F4)                                 &trans             &trans              &kp LC(UP_ARROW)    &trans         &kp LEFT_SHIFT
&kp HOME    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END     &kp LA(F4)      &kp PAGE_UP    &kp LC(PAGE_UP)    &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(RIGHT)  &kp LCTRL
&trans      &trans          &trans          &trans           &trans      &mkp MB2        &kp PAGE_DOWN  &kp LC(PAGE_DOWN)  &trans              &trans              &trans         &trans
&trans      &trans          &trans          &trans           &trans      &trans          &trans         &trans                                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
